name: deploy-backend

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: environment
      region:
        description: 'AWS Region'
        required: true
        type: choice
        options:
          - 'us-east-1'
      customer_id:
        description: 'Customer ID'
        required: true
        type: string
        default: 'orb'
      project_id:
        description: 'Project ID'
        required: true
        type: string
        default: 'integration-hub'

jobs:
  deploy-backend-stacks:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jinja2

      - name: Generate schema files
        run: |
          cd schemas
          python generate.py

      - name: Upload schema to S3
        run: |
          aws s3 cp ./backend/infrastructure/cloudformation/schema.graphql \
            s3://${{ inputs.customer_id }}-${{ inputs.project_id }}-build-artifacts/schemas/schema.graphql

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}

      - name: Deploy All Stacks
        run: |
          for stack in bootstrap cognito dynamodb lambdas appsync; do
            echo "Deploying $stack stack..."
          
            sam build --template ${stack}.yml
          
            sam package \
              --template-file ${stack}.yml \
              --s3-bucket ${{ inputs.customer_id }}-${{ inputs.project_id }}-build-artifacts \
              --output-template-file ${stack}-packaged.yml
          
            # Add an override for the schema location
            PARAMS="Environment=${{ inputs.environment }} CustomerId=${{ inputs.customer_id }} ProjectId=${{ inputs.project_id }}"
            if [ "$stack" == "appsync" ]; then
              PARAMS="$PARAMS SchemaS3Key=schemas/schema.graphql"
            fi
          
            sam deploy \
              --template-file ${stack}-packaged.yml \
              --s3-bucket ${{ inputs.customer_id }}-${{ inputs.project_id }}-build-artifacts \
              --stack-name ${{ inputs.customer_id }}-${{ inputs.project_id }}-${stack} \
              --capabilities CAPABILITY_NAMED_IAM \
              --no-fail-on-empty-changeset \
              --parameter-overrides $PARAMS
          
            aws s3 cp ${stack}-packaged.yml \
              s3://${{ inputs.customer_id }}-${{ inputs.project_id }}-build-templates/${stack}-packaged.yml
          
          done
        working-directory: ./backend/infrastructure/cloudformation